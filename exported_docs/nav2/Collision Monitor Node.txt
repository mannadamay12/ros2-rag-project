Title: Collision Monitor Node
URL: https://docs.nav2.org/configuration/packages/collision_monitor/configuring-collision-monitor-node.html
Section: getting_started/index.html
--------------------------------------------------------------------------------


## Features
The Collision Monitor uses polygons relative the robot’s base frame origin to define “zones”.
Data that fall into these zones trigger an operation depending on the model being used.
A given instance of the Collision Monitor can have many zones with different models at the same time.
When multiple zones trigger at once, the most aggressive one is used (e.g. stop > slow 50% > slow 10%).
The following models of safety behaviors are employed by Collision Monitor:
The zones around the robot can take the following shapes:
All shapes (Polygon,CircleandVelocityPolygon) are derived from basePolygonclass, so without loss of generality they would be called as “polygons”.
Subscribed footprint is also having the same properties as other polygons, but it is being obtained a footprint topic for the Approach Model.
The data may be obtained from different data sources:

## Parameters


## Polygons parameters
<polygonname>is the corresponding polygon name ID selected for this type.

## VelocityPolygon parameters
All previous Polygon parameters apply, in addition to the following unique parameters for VelocityPolygon.

## Observation sources parameters
<sourcename>is the corresponding data source name ID selected for this type.

## Example
Here is an example illustrating the common configurations for holonomic robots that cover multiple directions of the resultant velocity:
Here is an example of configuration YAML for the Collision Monitor.

Code Examples:

Language: unknown
File: source_timeout:0.0
```
collision_monitor
:
ros__parameters
:
base_frame_id
:
"base_footprint"
odom_frame_id
:
"odom"
cmd_vel_in_topic
:
"cmd_vel_smoothed"
cmd_vel_out_topic
:
"cmd_vel"
state_topic
:
"collision_monitor_state"
transform_tolerance
:
0.5
source_timeout
:
5.0
base_shift_correction
:
True
stop_pub_timeout
:
2.0
enable_stamped_cmd_vel
:
True
# False for Jazzy or older
use_realtime_priority
:
false
polygons
:
[
"PolygonStop"
,
"PolygonSlow"
,
"FootprintApproach"
]
PolygonStop
:
type
:
"circle"
radius
:
0.3
action_type
:
"stop"
min_points
:
4
# max_points: 3 for Humble
visualize
:
True
polygon_pub_topic
:
"polygon_stop"
enabled
:
True
PolygonSlow
:
type
:
"polygon"
points
:
"[[1.0,
1.0],
[1.0,
-1.0],
[-0.5,
-1.0],
[-0.5,
1.0]]"
action_type
:
"slowdown"
min_points
:
4
# max_points: 3 for Humble
slowdown_ratio
:
0.3
visualize
:
True
polygon_pub_topic
:
"polygon_slowdown"
enabled
:
True
PolygonLimit
:
type
:
"polygon"
points
:
"[[0.5,
0.5],
[0.5,
-0.5],
[-0.5,
-0.5],
[-0.5,
0.5]]"
action_type
:
"limit"
min_points
:
4
# max_points: 3 for Humble
linear_limit
:
0.4
angular_limit
:
0.5
visualize
:
True
polygon_pub_topic
:
"polygon_limit"
enabled
:
True
FootprintApproach
:
type
:
"polygon"
action_type
:
"approach"
footprint_topic
:
"/local_costmap/published_footprint"
time_before_collision
:
2.0
simulation_time_step
:
0.02
min_points
:
6
# max_points: 5 for Humble
visualize
:
False
enabled
:
True
VelocityPolygonStop
:
type
:
"velocity_polygon"
action_type
:
"stop"
min_points
:
6
visualize
:
True
enabled
:
True
polygon_pub_topic
:
"velocity_polygon_stop"
velocity_polygons
:
[
"rotation"
,
"translation_forward"
,
"translation_backward"
,
"stopped"
]
holonomic
:
false
rotation
:
points
:
"[[0.3,
0.3],
[0.3,
-0.3],
[-0.3,
-0.3],
[-0.3,
0.3]]"
linear_min
:
0.0
linear_max
:
0.05
theta_min
:
-1.0
theta_max
:
1.0
translation_forward
:
points
:
"[[0.35,
0.3],
[0.35,
-0.3],
[-0.2,
-0.3],
[-0.2,
0.3]]"
linear_min
:
0.0
linear_max
:
1.0
theta_min
:
-1.0
theta_max
:
1.0
translation_backward
:
points
:
"[[0.2,
0.3],
[0.2,
-0.3],
[-0.35,
-0.3],
[-0.35,
0.3]]"
linear_min
:
-1.0
linear_max
:
0.0
theta_min
:
-1.0
theta_max
:
1.0
# This is the last polygon to be checked, it should cover the entire range of robot's velocities
# It is used as the stopped polygon when the robot is not moving and as a fallback if the velocity
# is not covered by any of the other sub-polygons
stopped
:
points
:
"[[0.25,
0.25],
[0.25,
-0.25],
[-0.25,
-0.25],
[-0.25,
0.25]]"
linear_min
:
-1.0
linear_max
:
1.0
theta_min
:
-1.0
theta_max
:
1.0
observation_sources
:
[
"scan"
,
"pointcloud"
]
scan
:
source_timeout
:
0.2
type
:
"scan"
topic
:
"/scan"
enabled
:
True
pointcloud
:
type
:
"pointcloud"
topic
:
"/intel_realsense_r200_depth/points"
min_height
:
0.1
max_height
:
0.5
enabled
:
True
```
