Title: Getting Involved
URL: https://docs.nav2.org/development_guides/involvement_docs/index.html
Section: getting_started/index.html
--------------------------------------------------------------------------------


## Getting Involved
If you’re interested in getting involved in Navigation 2, first of all, welcome!
We encourage everyone to get involved from students, to junior developers, to senior developers, and executives.
There’s something to do for everyone from bug fixes, to feature development, new algorithms, and refactoring.
All ROS 2 TSC Working Groups have their meetings on theworking group calendar.
Here, you can find the date and time of the Navigation2 working group meeting. Make sure you’re checking in your local timezone.
From this calendar, you can add yourself to the event so it will appear on your google calendar and get the event link to the call through Google Hangouts.
We encourage everyone interested to come to the meeting to introduce yourself, your project, and see what everyone is working on.
Further,ROS Discourseis a good place to follow larger discussions happening in the community and announcements. This isnotthe correct place to post questions or ask for assistance. Please visitROS Answersfor Q&A.
Lastly, we have aCommunity Slackwhere we chat in real-time about topics in public channels or sidebar maintainers on individual projects via PMs. If you’re interested in contributing to Nav2, this is a great place to join!
If you’re looking to contribute code or bugs, please see the Process section below.
Over time, for developers that have an interest and have shown technical competence in an area of the stack, we elevate developers to a maintainers status.
That allows push rights to our protected branches, first-reviewers rights, and getting your name onAbout and Contact.
There currently is not a clear process for getting to be a maintainer, but if you’ve been involved and contributing over a duration of several months, you may be a good candidate and should email the project lead listed onAbout and Contact.

## Process
After you’ve introduced yourself in a working group meeting (recommended, not required), you’re ready to get started!
We recommend a typical open-source project flow and value detail and transparency.
If you commit to something and need to pull back, say so.
We all know priorities change and appreciate the heads up so that task can go into the open queue of tasks.
The process is simple and is as follow:
Note: We take code quality seriously and strive for high-quality and consistent code.
We make use of the linting and static analysis tools provided in ROS 2 (ament_cpplint,ament_uncrustify,ament_cppcheck, etc).
All PRs are built in CI with the appropriate ROS distributions and run through a set of unit and system level tests including static analysis.
You can see the results of these tests in the pull request.
It is expected for feature development for tests to cover this work to be added.
If any documentation must be updated due to your changes, that should be included in your pull request.

## Licensing
Licensing is very important to open source projects. It helps ensure the
software continues to be available under the terms that the author
desired.
Because much of the source code is ported from other ROS 1 projects, each
package has it’s own license. Contributions should be made under the predominant
license of that package. Entirely new packages should be made available under
theApache 2.0 license.
A license tells you what rights you have as a developer, as provided by
the copyright holder. It is important that the contributor fully
understands the licensing rights and agrees to them. Sometimes the
copyright holder isn’t the contributor, such as when the contributor is
doing work on behalf of a company.
If for some reason Apache 2.0 or BSD licenses are not appropriate for your work, please get in contact with a project maintainer and discuss your concerns or requirements.
We may consider special exceptions for exceptional work, within reason (we will not accept any licenses that makes it unsuitable for commercial use).

## Developer Certification of Origin (DCO)
To make a good faith effort to ensure licensing criteria are met,
Nav2 encourages the Developer Certificate of Origin (DCO) process
to be followed.
The DCO is an attestation attached to every contribution made by a
developer. In the commit message of the contribution, (described more
fully later in this document), the developer simply adds aSigned-off-bystatement and thereby agrees to the DCO.
In practice, its easier to justgitcommit-s-m"commitmessage.".
Where-sadds this automatically.
If you forgot to add this to a commit, it is easy to append via:gitcommit--amend-s.
When a developer submits a patch, it is a commitment that the
contributor has the right to submit the patch per the license.  The DCO
agreement is shown below and athttp://developercertificate.org/.

Code Examples:

Language: unknown
File: gitcommit--amend-s
```
Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the
    best of my knowledge, is covered under an appropriate open
    source license and I have the right under that license to
    submit that work with modifications, whether created in whole
    or in part by me, under the same open source license (unless
    I am permitted to submit under a different license), as
    Indicated in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including
    all personal information I submit with it, including my
    sign-off) is maintained indefinitely and may be redistributed
    consistent with this project or the open source license(s)
    involved.

```
