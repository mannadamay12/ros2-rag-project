Title: Building a visual robot model from scratch
URL: https://docs.ros.org/en/jazzy/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.html
Section: Installation
--------------------------------------------------------------------------------

Building a visual robot model from scratchGoal:Learn how to build a visual model of a robot that you can view in RvizTutorial level:IntermediateTime:20 minutesContentsOne ShapeMultiple ShapesOriginsMaterial GirlFinishing the ModelNoteThis tutorial assumes you know how to write well-formatted XML codeIn this tutorial, we’re going to build a visual model of a robot that vaguely looks like R2D2.
In later tutorials, you’ll learn how toarticulate the model,add in some physical properties, andgenerate neater code with xacro, but for now, we’re going to focus on getting the visual geometry correct.Before continuing, make sure you have thejoint_state_publisherpackage installed.
If you installedurdf_tutorialbinaries, this should already be the case.
If not, please update your installation to include that package (userosdepto check).All of the robot models mentioned in this tutorial (and the source files) can be found in theurdf_tutorialpackage.One ShapeFirst, we’re just going to explore one simple shape.
Here’s about as simple as a urdf as you can make.[Source: 01-myfirst.urdf]<?xml version="1.0"?><robotname="myfirst"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link></robot>To translate the XML into English, this is a robot with the namemyfirst, that contains only one link (a.k.a. part), whose visual component is just a cylinder 0.6 meters long with a 0.2 meter radius.
This may seem like a lot of enclosing tags for a simple “hello world” type example, but it will get more complicated, trust me.To examine the model, launch thedisplay.launch.pyfile:ros2 launch urdf_tutorial display.launch.py model:=urdf/01-myfirst.urdfThis does three things:Loads the specified model and saves it as a parameter for therobot_state_publishernode.Runs nodes to publishsensor_msgs/msg/JointStateand transforms (more on these later)Starts Rviz with a configuration fileAfter launchingdisplay.launch.py, you should end up with RViz showing you the following:Things to note:The fixed frame is the transform frame where the center of the grid is located.
Here, it’s a frame defined by our one link, base_link.The visual element (the cylinder) has its origin at the center of its geometry as a default.
Hence, half the cylinder is below the grid.Multiple ShapesNow let’s look at how to add multiple shapes/links.
If we just add more link elements to the urdf, the parser won’t know where to put them.
So, we have to add joints.
Joint elements can refer to both flexible and inflexible joints.
We’ll start with inflexible, or fixed joints.[Source: 02-multipleshapes.urdf]<?xml version="1.0"?><robotname="multipleshapes"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/></joint></robot>Note how we defined a 0.6m x 0.1m x 0.2m boxThe joint is defined in terms of a parent and a child.
URDF is ultimately a tree structure with one root link.
This means that the leg’s position is dependent on the base_link’s position.ros2 launch urdf_tutorial display.launch.py model:=urdf/02-multipleshapes.urdfBoth of the shapes overlap with each other, because they share the same origin.
If we want them not to overlap we must define more origins.OriginsR2D2’s leg attaches to the top half of his torso, on the side.
So that’s where we specify the origin of the JOINT to be.
Also, it doesn’t attach to the middle of the leg, it attaches to the upper part, so we must offset the origin for the leg as well.
We also rotate the leg so it is upright.[Source: 03-origins.urdf]<?xml version="1.0"?><robotname="origins"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint></robot>Let’s start by examining the joint’s origin.
It is defined in terms of the parent’s reference frame.
So we are -0.22 meters in the y direction (to our left, but to the right relative to the axes) and 0.25 meters in the z direction (up).
This means that the origin for the child link will be up and to the right, regardless of the child link’s visual origin tag.
Since we didn’t specify a rpy (roll pitch yaw) attribute, the child frame will be default have the same orientation as the parent frame.Now, looking at the leg’s visual origin, it has both a xyz and rpy offset.
This defines where the center of the visual element should be, relative to its origin.
Since we want the leg to attach at the top, we offset the origin down by setting the z offset to be -0.3 meters.
And since we want the long part of the leg to be parallel to the z axis, we rotate the visual part PI/2 around the Y axis.ros2 launch urdf_tutorial display.launch.py model:=urdf/03-origins.urdfThe launch file runs packages that will create TF frames for each link in your model based on your URDF.
Rviz uses this information to figure out where to display each shape.If a TF frame does not exist for a given URDF link, then it will be placed at the origin in white (ref.related question).Material Girl“Alright,” I hear you say.
“That’s very cute, but not everyone owns a B21.
My robot and R2D2 are not red!”
That’s a good point.
Let’s take a look at the material tag.[Source: 04-materials.urdf]<?xml version="1.0"?><robotname="materials"><materialname="blue"><colorrgba="0 0 0.8 1"/></material><materialname="white"><colorrgba="1 1 1 1"/></material><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry><materialname="blue"/></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint><linkname="left_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_left_leg"type="fixed"><parentlink="base_link"/><childlink="left_leg"/><originxyz="0 0.22 0.25"/></joint></robot>The body is now blue.
We’ve defined a new material called “blue”, with the red, green, blue and alpha channels defined as 0,0,0.8 and 1 respectively.
All of the values can be in the range [0,1].
This material is then referenced by the base_link’s visual element.
The white material is defined similarly.You could also define the material tag from within the visual element, and even reference it in other links.
No one will even complain if you redefine it though.You can also use a texture to specify an image file to be used for coloring the objectros2 launch urdf_tutorial display.launch.py model:=urdf/04-materials.urdfFinishing the ModelNow we finish the model off with a few more shapes: feet, wheels, and head.
Most notably, we add a sphere and a some meshes.
We’ll also add few other pieces that we’ll use later.[Source: 05-visual.urdf]<?xml version="1.0"?><robotname="visual"><materialname="blue"><colorrgba="0 0 0.8 1"/></material><materialname="black"><colorrgba="0 0 0 1"/></material><materialname="white"><colorrgba="1 1 1 1"/></material><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry><materialname="blue"/></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint><linkname="right_base"><visual><geometry><boxsize="0.4 0.1 0.1"/></geometry><materialname="white"/></visual></link><jointname="right_base_joint"type="fixed"><parentlink="right_leg"/><childlink="right_base"/><originxyz="0 0 -0.6"/></joint><linkname="right_front_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="right_front_wheel_joint"type="fixed"><parentlink="right_base"/><childlink="right_front_wheel"/><originrpy="0 0 0"xyz="0.133333333333 0 -0.085"/></joint><linkname="right_back_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="right_back_wheel_joint"type="fixed"><parentlink="right_base"/><childlink="right_back_wheel"/><originrpy="0 0 0"xyz="-0.133333333333 0 -0.085"/></joint><linkname="left_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_left_leg"type="fixed"><parentlink="base_link"/><childlink="left_leg"/><originxyz="0 0.22 0.25"/></joint><linkname="left_base"><visual><geometry><boxsize="0.4 0.1 0.1"/></geometry><materialname="white"/></visual></link><jointname="left_base_joint"type="fixed"><parentlink="left_leg"/><childlink="left_base"/><originxyz="0 0 -0.6"/></joint><linkname="left_front_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="left_front_wheel_joint"type="fixed"><parentlink="left_base"/><childlink="left_front_wheel"/><originrpy="0 0 0"xyz="0.133333333333 0 -0.085"/></joint><linkname="left_back_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="left_back_wheel_joint"type="fixed"><parentlink="left_base"/><childlink="left_back_wheel"/><originrpy="0 0 0"xyz="-0.133333333333 0 -0.085"/></joint><jointname="gripper_extension"type="fixed"><parentlink="base_link"/><childlink="gripper_pole"/><originrpy="0 0 0"xyz="0.19 0 0.2"/></joint><linkname="gripper_pole"><visual><geometry><cylinderlength="0.2"radius="0.01"/></geometry><originrpy="0 1.57075 0 "xyz="0.1 0 0"/></visual></link><jointname="left_gripper_joint"type="fixed"><originrpy="0 0 0"xyz="0.2 0.01 0"/><parentlink="gripper_pole"/><childlink="left_gripper"/></joint><linkname="left_gripper"><visual><originrpy="0.0 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link><jointname="left_tip_joint"type="fixed"><parentlink="left_gripper"/><childlink="left_tip"/></joint><linkname="left_tip"><visual><originrpy="0.0 0 0"xyz="0.09137 0.00495 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger_tip.dae"/></geometry></visual></link><jointname="right_gripper_joint"type="fixed"><originrpy="0 0 0"xyz="0.2 -0.01 0"/><parentlink="gripper_pole"/><childlink="right_gripper"/></joint><linkname="right_gripper"><visual><originrpy="-3.1415 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link><jointname="right_tip_joint"type="fixed"><parentlink="right_gripper"/><childlink="right_tip"/></joint><linkname="right_tip"><visual><originrpy="-3.1415 0 0"xyz="0.09137 0.00495 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger_tip.dae"/></geometry></visual></link><linkname="head"><visual><geometry><sphereradius="0.2"/></geometry><materialname="white"/></visual></link><jointname="head_swivel"type="fixed"><parentlink="base_link"/><childlink="head"/><originxyz="0 0 0.3"/></joint><linkname="box"><visual><geometry><boxsize="0.08 0.08 0.08"/></geometry><materialname="blue"/></visual></link><jointname="tobox"type="fixed"><parentlink="head"/><childlink="box"/><originxyz="0.1814 0 0.1414"/></joint></robot>ros2 launch urdf_tutorial display.launch.py model:=urdf/05-visual.urdfHow to add the sphere should be fairly self explanatory:<linkname="head"><visual><geometry><sphereradius="0.2"/></geometry><materialname="white"/></visual></link>The meshes here were borrowed from the PR2.
They are separate files which you have to specify the path for.
You should use thepackage://NAME_OF_PACKAGE/pathnotation.
The meshes for this tutorial are located within theurdf_tutorialpackage, in a folder called meshes.<linkname="left_gripper"><visual><originrpy="0.0 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link>The meshes can be imported in a number of different formats.
STL is fairly common, but the engine also supports DAE, which can have its own color data, meaning you don’t have to specify the color/material.
Often these are in separate files.
These meshes reference the.tiffiles also in the meshes folder.Meshes can also be sized using relative scaling parameters or a bounding box size.We could have also referred to meshes in a completely different package.There you have it.
A R2D2-like URDF model.
Now you can continue on to the next step,making it move.

Code Examples:

Language: unknown
<?xml version="1.0"?><robotname="myfirst"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link></robot>

Language: unknown
ros2 launch urdf_tutorial display.launch.py model:=urdf/01-myfirst.urdf

Language: unknown
<?xml version="1.0"?><robotname="multipleshapes"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/></joint></robot>

Language: unknown
ros2 launch urdf_tutorial display.launch.py model:=urdf/02-multipleshapes.urdf

Language: unknown
<?xml version="1.0"?><robotname="origins"><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint></robot>

Language: unknown
ros2 launch urdf_tutorial display.launch.py model:=urdf/03-origins.urdf

Language: unknown
<?xml version="1.0"?><robotname="materials"><materialname="blue"><colorrgba="0 0 0.8 1"/></material><materialname="white"><colorrgba="1 1 1 1"/></material><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry><materialname="blue"/></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint><linkname="left_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_left_leg"type="fixed"><parentlink="base_link"/><childlink="left_leg"/><originxyz="0 0.22 0.25"/></joint></robot>

Language: unknown
ros2 launch urdf_tutorial display.launch.py model:=urdf/04-materials.urdf

Language: unknown
<?xml version="1.0"?><robotname="visual"><materialname="blue"><colorrgba="0 0 0.8 1"/></material><materialname="black"><colorrgba="0 0 0 1"/></material><materialname="white"><colorrgba="1 1 1 1"/></material><linkname="base_link"><visual><geometry><cylinderlength="0.6"radius="0.2"/></geometry><materialname="blue"/></visual></link><linkname="right_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_right_leg"type="fixed"><parentlink="base_link"/><childlink="right_leg"/><originxyz="0 -0.22 0.25"/></joint><linkname="right_base"><visual><geometry><boxsize="0.4 0.1 0.1"/></geometry><materialname="white"/></visual></link><jointname="right_base_joint"type="fixed"><parentlink="right_leg"/><childlink="right_base"/><originxyz="0 0 -0.6"/></joint><linkname="right_front_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="right_front_wheel_joint"type="fixed"><parentlink="right_base"/><childlink="right_front_wheel"/><originrpy="0 0 0"xyz="0.133333333333 0 -0.085"/></joint><linkname="right_back_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="right_back_wheel_joint"type="fixed"><parentlink="right_base"/><childlink="right_back_wheel"/><originrpy="0 0 0"xyz="-0.133333333333 0 -0.085"/></joint><linkname="left_leg"><visual><geometry><boxsize="0.6 0.1 0.2"/></geometry><originrpy="0 1.57075 0"xyz="0 0 -0.3"/><materialname="white"/></visual></link><jointname="base_to_left_leg"type="fixed"><parentlink="base_link"/><childlink="left_leg"/><originxyz="0 0.22 0.25"/></joint><linkname="left_base"><visual><geometry><boxsize="0.4 0.1 0.1"/></geometry><materialname="white"/></visual></link><jointname="left_base_joint"type="fixed"><parentlink="left_leg"/><childlink="left_base"/><originxyz="0 0 -0.6"/></joint><linkname="left_front_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="left_front_wheel_joint"type="fixed"><parentlink="left_base"/><childlink="left_front_wheel"/><originrpy="0 0 0"xyz="0.133333333333 0 -0.085"/></joint><linkname="left_back_wheel"><visual><originrpy="1.57075 0 0"xyz="0 0 0"/><geometry><cylinderlength="0.1"radius="0.035"/></geometry><materialname="black"/></visual></link><jointname="left_back_wheel_joint"type="fixed"><parentlink="left_base"/><childlink="left_back_wheel"/><originrpy="0 0 0"xyz="-0.133333333333 0 -0.085"/></joint><jointname="gripper_extension"type="fixed"><parentlink="base_link"/><childlink="gripper_pole"/><originrpy="0 0 0"xyz="0.19 0 0.2"/></joint><linkname="gripper_pole"><visual><geometry><cylinderlength="0.2"radius="0.01"/></geometry><originrpy="0 1.57075 0 "xyz="0.1 0 0"/></visual></link><jointname="left_gripper_joint"type="fixed"><originrpy="0 0 0"xyz="0.2 0.01 0"/><parentlink="gripper_pole"/><childlink="left_gripper"/></joint><linkname="left_gripper"><visual><originrpy="0.0 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link><jointname="left_tip_joint"type="fixed"><parentlink="left_gripper"/><childlink="left_tip"/></joint><linkname="left_tip"><visual><originrpy="0.0 0 0"xyz="0.09137 0.00495 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger_tip.dae"/></geometry></visual></link><jointname="right_gripper_joint"type="fixed"><originrpy="0 0 0"xyz="0.2 -0.01 0"/><parentlink="gripper_pole"/><childlink="right_gripper"/></joint><linkname="right_gripper"><visual><originrpy="-3.1415 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link><jointname="right_tip_joint"type="fixed"><parentlink="right_gripper"/><childlink="right_tip"/></joint><linkname="right_tip"><visual><originrpy="-3.1415 0 0"xyz="0.09137 0.00495 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger_tip.dae"/></geometry></visual></link><linkname="head"><visual><geometry><sphereradius="0.2"/></geometry><materialname="white"/></visual></link><jointname="head_swivel"type="fixed"><parentlink="base_link"/><childlink="head"/><originxyz="0 0 0.3"/></joint><linkname="box"><visual><geometry><boxsize="0.08 0.08 0.08"/></geometry><materialname="blue"/></visual></link><jointname="tobox"type="fixed"><parentlink="head"/><childlink="box"/><originxyz="0.1814 0 0.1414"/></joint></robot>

Language: unknown
ros2 launch urdf_tutorial display.launch.py model:=urdf/05-visual.urdf

Language: unknown
<linkname="head"><visual><geometry><sphereradius="0.2"/></geometry><materialname="white"/></visual></link>

Language: unknown
<linkname="left_gripper"><visual><originrpy="0.0 0 0"xyz="0 0 0"/><geometry><meshfilename="package://urdf_tutorial/meshes/l_finger.dae"/></geometry></visual></link>
