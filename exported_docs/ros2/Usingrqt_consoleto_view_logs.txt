Title: Usingrqt_consoleto view logs
URL: https://docs.ros.org/en/jazzy/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.html
Section: Installation
--------------------------------------------------------------------------------

Usingrqt_consoleto view logsGoal:Get to knowrqt_console, a tool for introspecting log messages.Tutorial level:BeginnerTime:5 minutesContentsBackgroundPrerequisitesTasks1 Setup2 Messages on rqt_console3 Logger levelsSummaryNext stepsBackgroundrqt_consoleis a GUI tool used to introspect log messages in ROS 2.
Typically, log messages show up in your terminal.
Withrqt_console, you can collect those messages over time, view them closely and in a more organized manner, filter them, save them and even reload the saved files to introspect at a different time.Nodes use logs to output messages concerning events and status in a variety of ways.
Their content is usually informational, for the sake of the user.PrerequisitesYou will needrqt_console and turtlesiminstalled.As always, don’t forget to source ROS 2 inevery new terminal you open.Tasks1 SetupStartrqt_consolein a new terminal with the following command:ros2 run rqt_console rqt_consoleTherqt_consolewindow will open:The first section of the console is where log messages from your system will display.In the middle you have the option to filter messages by excluding severity levels.
You can also add more exclusion filters using the plus-sign button to the right.The bottom section is for highlighting messages that include a string you input.
You can add more filters to this section as well.Now startturtlesimin a new terminal with the following command:ros2 run turtlesim turtlesim_node2 Messages on rqt_consoleTo produce log messages forrqt_consoleto display, let’s have the turtle run into the wall.
In a new terminal, enter theros2topicpubcommand (discussed in detail in thetopics tutorial) below:ros2 topic pub -r 1 /turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}"Since the above command is publishing the topic at a steady rate, the turtle is continuously running into the wall.
Inrqt_consoleyou will see the same message with theWarnseverity level displayed over and over, like so:PressCtrl+Cin the terminal where you ran theros2topicpubcommand to stop your turtle from running into the wall.3 Logger levelsROS 2’s logger levels are ordered by severity:FatalErrorWarnInfoDebugThere is no exact standard for what each level indicates, but it’s safe to assume that:Fatalmessages indicate the system is going to terminate to try to protect itself from detriment.Errormessages indicate significant issues that won’t necessarily damage the system, but are preventing it from functioning properly.Warnmessages indicate unexpected activity or non-ideal results that might represent a deeper issue, but don’t harm functionality outright.Infomessages indicate event and status updates that serve as a visual verification that the system is running as expected.Debugmessages detail the entire step-by-step process of the system execution.The default level isInfo.
You will only see messages of the default severity level and more-severe levels.Normally, onlyDebugmessages are hidden because they’re the only level less severe thanInfo.
For example, if you set the default level toWarn, you would only see messages of severityWarn,Error, andFatal.3.1 Set the default logger levelYou can set the default logger level when you first run the/turtlesimnode using remapping.
Enter the following command in your terminal:ros2 run turtlesim turtlesim_node --ros-args --log-level WARNNow you won’t see the initialInfolevel messages that came up in the console last time you startedturtlesim.
That’s becauseInfomessages are lower priority than the new default severity,Warn.Summaryrqt_consolecan be very helpful if you need to closely examine the log messages from your system.
You might want to examine log messages for any number of reasons, usually to find out where something went wrong and the series of events leading up to that.Next stepsThe next tutorial will teach you about starting multiple nodes at once withROS 2 Launch.

Code Examples:

Language: unknown
ros2 run rqt_console rqt_console

Language: unknown
ros2 run turtlesim turtlesim_node

Language: unknown
ros2 topic pub -r 1 /turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}"

Language: unknown
FatalErrorWarnInfoDebug

Language: unknown
ros2 run turtlesim turtlesim_node --ros-args --log-level WARN
