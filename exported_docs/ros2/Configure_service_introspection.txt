Title: Configure service introspection
URL: https://docs.ros.org/en/jazzy/Tutorials/Demos/Service-Introspection.html
Section: Installation
--------------------------------------------------------------------------------

Configure service introspectionGoal:Configure service introspection for a service client and a server.Tutorial level:AdvancedTime:15 minutesTable of ContentsOverviewInstalling the demoIntrospection Configuration StateIntrospection demoRelated contentOverviewROS 2 applications usually consist of services to execute specific procedures in remote nodes.
It is possible to introspect service data communication with service introspection.In this demo, we’ll be highlighting how to configure service introspection state for a service client and a server and monitor service communication withros2serviceecho.Installing the demoSee theinstallation instructionsfor details on installing ROS 2.If you’ve installed ROS 2 binary packages, ensure that you haveros-jazzy-demo-nodes-cppinstalled.
If you downloaded the archive or built ROS 2 from source, it will already be part of the installation.Introspection Configuration StateThere are 3 configuration states for service introspection.Service Introspection Configuration StateRCL_SERVICE_INTROSPECTION_OFFDisabledRCL_SERVICE_INTROSPECTION_METADATAOnly metadata without any user data contentsRCL_SERVICE_INTROSPECTION_CONTENTSUser data contents with metadataIntrospection demoThis demo shows how to manage service introspection and monitor the service data communication with usingros2serviceecho.IntrospectionServiceNode:https://github.com/ros2/demos/blob/jazzy/demo_nodes_cpp/src/services/introspection_service.cppnamespacedemo_nodes_cpp{classIntrospectionServiceNode:publicrclcpp::Node{public:DEMO_NODES_CPP_PUBLICexplicitIntrospectionServiceNode(constrclcpp::NodeOptions&options):Node("introspection_service",options){autohandle_add_two_ints=[this](conststd::shared_ptr<rmw_request_id_t>request_header,conststd::shared_ptr<example_interfaces::srv::AddTwoInts::Request>request,std::shared_ptr<example_interfaces::srv::AddTwoInts::Response>response)->void{(void)request_header;RCLCPP_INFO(this->get_logger(),"Incoming request\na: %"PRId64" b: %"PRId64,request->a,request->b);response->sum=request->a+request->b;};// Create a service that will use the callback function to handle requests.srv_=create_service<example_interfaces::srv::AddTwoInts>("add_two_ints",handle_add_two_ints);autoon_set_parameter_callback=[](std::vector<rclcpp::Parameter>parameters){rcl_interfaces::msg::SetParametersResultresult;result.successful=true;for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="service_configure_introspection"){continue;}if(param.get_type()!=rclcpp::ParameterType::PARAMETER_STRING){result.successful=false;result.reason="must be a string";break;}if(param.as_string()!="disabled"&&param.as_string()!="metadata"&&param.as_string()!="contents"){result.successful=false;result.reason="must be one of 'disabled', 'metadata', or 'contents'";break;}}returnresult;};autopost_set_parameter_callback=[this](conststd::vector<rclcpp::Parameter>&parameters){for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="service_configure_introspection"){continue;}rcl_service_introspection_state_tintrospection_state=RCL_SERVICE_INTROSPECTION_OFF;if(param.as_string()=="disabled"){introspection_state=RCL_SERVICE_INTROSPECTION_OFF;}elseif(param.as_string()=="metadata"){introspection_state=RCL_SERVICE_INTROSPECTION_METADATA;}elseif(param.as_string()=="contents"){introspection_state=RCL_SERVICE_INTROSPECTION_CONTENTS;}this->srv_->configure_introspection(this->get_clock(),rclcpp::SystemDefaultsQoS(),introspection_state);break;}};on_set_parameters_callback_handle_=this->add_on_set_parameters_callback(on_set_parameter_callback);post_set_parameters_callback_handle_=this->add_post_set_parameters_callback(post_set_parameter_callback);this->declare_parameter("service_configure_introspection","disabled");}private:rclcpp::Service<example_interfaces::srv::AddTwoInts>::SharedPtrsrv_;rclcpp::node_interfaces::OnSetParametersCallbackHandle::SharedPtron_set_parameters_callback_handle_;rclcpp::node_interfaces::PostSetParametersCallbackHandle::SharedPtrpost_set_parameters_callback_handle_;};}// namespace demo_nodes_cppService introspection is disable in default, so users need to enable it to callconfigure_introspectionon service server.
In this demo,IntrospectionServiceNodeuses a parameter named`service_configure_introspectionto configure the service introspection state.1st we need to startIntrospectionServiceNode.$ros2rundemo_nodes_cppintrospection_serviceTo change service introspection state, we need to set theconfigure_introspectionparameter as following.### User data contents with metadata$ros2paramset/introspection_serviceservice_configure_introspectioncontents### Or only metadata$ros2paramset/introspection_serviceservice_configure_introspectionmetadata### To disable$ros2paramset/introspection_serviceservice_configure_introspectiondisabledIntrospectionClientNode:https://github.com/ros2/demos/blob/jazzy/demo_nodes_cpp/src/services/introspection_client.cppnamespacedemo_nodes_cpp{classIntrospectionClientNode:publicrclcpp::Node{public:DEMO_NODES_CPP_PUBLICexplicitIntrospectionClientNode(constrclcpp::NodeOptions&options):Node("introspection_client",options){client_=create_client<example_interfaces::srv::AddTwoInts>("add_two_ints");autoon_set_parameter_callback=[](std::vector<rclcpp::Parameter>parameters){rcl_interfaces::msg::SetParametersResultresult;result.successful=true;for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="client_configure_introspection"){continue;}if(param.get_type()!=rclcpp::ParameterType::PARAMETER_STRING){result.successful=false;result.reason="must be a string";break;}if(param.as_string()!="disabled"&&param.as_string()!="metadata"&&param.as_string()!="contents"){result.successful=false;result.reason="must be one of 'disabled', 'metadata', or 'contents'";break;}}returnresult;};autopost_set_parameter_callback=[this](conststd::vector<rclcpp::Parameter>&parameters){for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="client_configure_introspection"){continue;}rcl_service_introspection_state_tintrospection_state=RCL_SERVICE_INTROSPECTION_OFF;if(param.as_string()=="disabled"){introspection_state=RCL_SERVICE_INTROSPECTION_OFF;}elseif(param.as_string()=="metadata"){introspection_state=RCL_SERVICE_INTROSPECTION_METADATA;}elseif(param.as_string()=="contents"){introspection_state=RCL_SERVICE_INTROSPECTION_CONTENTS;}this->client_->configure_introspection(this->get_clock(),rclcpp::SystemDefaultsQoS(),introspection_state);break;}};on_set_parameters_callback_handle_=this->add_on_set_parameters_callback(on_set_parameter_callback);post_set_parameters_callback_handle_=this->add_post_set_parameters_callback(post_set_parameter_callback);this->declare_parameter("client_configure_introspection","disabled");timer_=this->create_wall_timer(std::chrono::milliseconds(500),[this](){if(!client_->service_is_ready()){return;}if(!request_in_progress_){autorequest=std::make_shared<example_interfaces::srv::AddTwoInts::Request>();request->a=2;request->b=3;request_in_progress_=true;client_->async_send_request(request,[this](rclcpp::Client<example_interfaces::srv::AddTwoInts>::SharedFuturecb_f){request_in_progress_=false;RCLCPP_INFO(get_logger(),"Result of add_two_ints: %ld",cb_f.get()->sum);});return;}});}private:rclcpp::Client<example_interfaces::srv::AddTwoInts>::SharedPtrclient_;rclcpp::TimerBase::SharedPtrtimer_;rclcpp::node_interfaces::OnSetParametersCallbackHandle::SharedPtron_set_parameters_callback_handle_;rclcpp::node_interfaces::PostSetParametersCallbackHandle::SharedPtrpost_set_parameters_callback_handle_;boolrequest_in_progress_{false};};}// namespace demo_nodes_cppAnd then, we start and configureIntrospectionClientNodein the same way.$ros2rundemo_nodes_cppintrospection_clientChange service introspection state to setconfigure_introspectionparameter as following.### User data contents with metadata$ros2paramset/introspection_clientclient_configure_introspectioncontents### Or only metadata$ros2paramset/introspection_clientclient_configure_introspectionmetadata### To disable$ros2paramset/introspection_clientclient_configure_introspectiondisabledIn this tutorial the following is example output with service introspection stateCONTENTSonIntrospectionServiceNodeandMETADATAonIntrospectionClientNode.
To monitor service communication betweenIntrospectionClientNodeandIntrospectionServiceNode, let’s run it:$ros2serviceecho--flow-style/add_two_ints
info:event_type:REQUEST_SENTstamp:sec:1709432402nanosec:680094264client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,21,3]sequence_number:247request:[]response:[]---
info:event_type:REQUEST_RECEIVEDstamp:sec:1709432402nanosec:680459568client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,20,4]sequence_number:247request:[{a:2,b:3}]response:[]---
info:event_type:RESPONSE_SENTstamp:sec:1709432402nanosec:680765280client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,20,4]sequence_number:247request:[]response:[{sum:5}]---
info:event_type:RESPONSE_RECEIVEDstamp:sec:1709432402nanosec:681027998client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,21,3]sequence_number:247request:[]response:[]---
...You can see theevent_type:REQUEST_SENTandevent_type:RESPONSE_RECEIVED, those introspection service event take place inIntrospectionClientNode.
And those events does not include any contents inrequestandresponsefield, this is becauseIntrospectionClientNode’s service introspection state is set toMETADATA.
On the other hand,event_type:REQUEST_RECEIVEDandevent_type:RESPONSE_SENTevent fromIntrospectionServiceNodeincludesrequest:[{a:2,b:3}]andresponse:[{sum:5}]as introspection state is set toCONTENTS.Related contentservice introspection client example (rclcpp)andservice introspection service example (rclcpp).service introspection client and service example (rclpy).Service Introspection REP-2012.

Code Examples:

Language: unknown
namespacedemo_nodes_cpp{classIntrospectionServiceNode:publicrclcpp::Node{public:DEMO_NODES_CPP_PUBLICexplicitIntrospectionServiceNode(constrclcpp::NodeOptions&options):Node("introspection_service",options){autohandle_add_two_ints=[this](conststd::shared_ptr<rmw_request_id_t>request_header,conststd::shared_ptr<example_interfaces::srv::AddTwoInts::Request>request,std::shared_ptr<example_interfaces::srv::AddTwoInts::Response>response)->void{(void)request_header;RCLCPP_INFO(this->get_logger(),"Incoming request\na: %"PRId64" b: %"PRId64,request->a,request->b);response->sum=request->a+request->b;};// Create a service that will use the callback function to handle requests.srv_=create_service<example_interfaces::srv::AddTwoInts>("add_two_ints",handle_add_two_ints);autoon_set_parameter_callback=[](std::vector<rclcpp::Parameter>parameters){rcl_interfaces::msg::SetParametersResultresult;result.successful=true;for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="service_configure_introspection"){continue;}if(param.get_type()!=rclcpp::ParameterType::PARAMETER_STRING){result.successful=false;result.reason="must be a string";break;}if(param.as_string()!="disabled"&&param.as_string()!="metadata"&&param.as_string()!="contents"){result.successful=false;result.reason="must be one of 'disabled', 'metadata', or 'contents'";break;}}returnresult;};autopost_set_parameter_callback=[this](conststd::vector<rclcpp::Parameter>&parameters){for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="service_configure_introspection"){continue;}rcl_service_introspection_state_tintrospection_state=RCL_SERVICE_INTROSPECTION_OFF;if(param.as_string()=="disabled"){introspection_state=RCL_SERVICE_INTROSPECTION_OFF;}elseif(param.as_string()=="metadata"){introspection_state=RCL_SERVICE_INTROSPECTION_METADATA;}elseif(param.as_string()=="contents"){introspection_state=RCL_SERVICE_INTROSPECTION_CONTENTS;}this->srv_->configure_introspection(this->get_clock(),rclcpp::SystemDefaultsQoS(),introspection_state);break;}};on_set_parameters_callback_handle_=this->add_on_set_parameters_callback(on_set_parameter_callback);post_set_parameters_callback_handle_=this->add_post_set_parameters_callback(post_set_parameter_callback);this->declare_parameter("service_configure_introspection","disabled");}private:rclcpp::Service<example_interfaces::srv::AddTwoInts>::SharedPtrsrv_;rclcpp::node_interfaces::OnSetParametersCallbackHandle::SharedPtron_set_parameters_callback_handle_;rclcpp::node_interfaces::PostSetParametersCallbackHandle::SharedPtrpost_set_parameters_callback_handle_;};}// namespace demo_nodes_cpp

Language: unknown
$ros2rundemo_nodes_cppintrospection_service

Language: unknown
### User data contents with metadata$ros2paramset/introspection_serviceservice_configure_introspectioncontents### Or only metadata$ros2paramset/introspection_serviceservice_configure_introspectionmetadata### To disable$ros2paramset/introspection_serviceservice_configure_introspectiondisabled

Language: unknown
namespacedemo_nodes_cpp{classIntrospectionClientNode:publicrclcpp::Node{public:DEMO_NODES_CPP_PUBLICexplicitIntrospectionClientNode(constrclcpp::NodeOptions&options):Node("introspection_client",options){client_=create_client<example_interfaces::srv::AddTwoInts>("add_two_ints");autoon_set_parameter_callback=[](std::vector<rclcpp::Parameter>parameters){rcl_interfaces::msg::SetParametersResultresult;result.successful=true;for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="client_configure_introspection"){continue;}if(param.get_type()!=rclcpp::ParameterType::PARAMETER_STRING){result.successful=false;result.reason="must be a string";break;}if(param.as_string()!="disabled"&&param.as_string()!="metadata"&&param.as_string()!="contents"){result.successful=false;result.reason="must be one of 'disabled', 'metadata', or 'contents'";break;}}returnresult;};autopost_set_parameter_callback=[this](conststd::vector<rclcpp::Parameter>&parameters){for(constrclcpp::Parameter&param:parameters){if(param.get_name()!="client_configure_introspection"){continue;}rcl_service_introspection_state_tintrospection_state=RCL_SERVICE_INTROSPECTION_OFF;if(param.as_string()=="disabled"){introspection_state=RCL_SERVICE_INTROSPECTION_OFF;}elseif(param.as_string()=="metadata"){introspection_state=RCL_SERVICE_INTROSPECTION_METADATA;}elseif(param.as_string()=="contents"){introspection_state=RCL_SERVICE_INTROSPECTION_CONTENTS;}this->client_->configure_introspection(this->get_clock(),rclcpp::SystemDefaultsQoS(),introspection_state);break;}};on_set_parameters_callback_handle_=this->add_on_set_parameters_callback(on_set_parameter_callback);post_set_parameters_callback_handle_=this->add_post_set_parameters_callback(post_set_parameter_callback);this->declare_parameter("client_configure_introspection","disabled");timer_=this->create_wall_timer(std::chrono::milliseconds(500),[this](){if(!client_->service_is_ready()){return;}if(!request_in_progress_){autorequest=std::make_shared<example_interfaces::srv::AddTwoInts::Request>();request->a=2;request->b=3;request_in_progress_=true;client_->async_send_request(request,[this](rclcpp::Client<example_interfaces::srv::AddTwoInts>::SharedFuturecb_f){request_in_progress_=false;RCLCPP_INFO(get_logger(),"Result of add_two_ints: %ld",cb_f.get()->sum);});return;}});}private:rclcpp::Client<example_interfaces::srv::AddTwoInts>::SharedPtrclient_;rclcpp::TimerBase::SharedPtrtimer_;rclcpp::node_interfaces::OnSetParametersCallbackHandle::SharedPtron_set_parameters_callback_handle_;rclcpp::node_interfaces::PostSetParametersCallbackHandle::SharedPtrpost_set_parameters_callback_handle_;boolrequest_in_progress_{false};};}// namespace demo_nodes_cpp

Language: unknown
$ros2rundemo_nodes_cppintrospection_client

Language: unknown
### User data contents with metadata$ros2paramset/introspection_clientclient_configure_introspectioncontents### Or only metadata$ros2paramset/introspection_clientclient_configure_introspectionmetadata### To disable$ros2paramset/introspection_clientclient_configure_introspectiondisabled

Language: unknown
$ros2serviceecho--flow-style/add_two_ints
info:event_type:REQUEST_SENTstamp:sec:1709432402nanosec:680094264client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,21,3]sequence_number:247request:[]response:[]---
info:event_type:REQUEST_RECEIVEDstamp:sec:1709432402nanosec:680459568client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,20,4]sequence_number:247request:[{a:2,b:3}]response:[]---
info:event_type:RESPONSE_SENTstamp:sec:1709432402nanosec:680765280client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,20,4]sequence_number:247request:[]response:[{sum:5}]---
info:event_type:RESPONSE_RECEIVEDstamp:sec:1709432402nanosec:681027998client_gid:[1,15,0,18,86,208,115,86,0,0,0,0,0,0,21,3]sequence_number:247request:[]response:[]---
...
