Title: Understanding parameters
URL: https://docs.ros.org/en/jazzy/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.html
Section: Installation
--------------------------------------------------------------------------------

Understanding parametersGoal:Learn how to get, set, save and reload parameters in ROS 2.Tutorial level:BeginnerTime:5 minutesContentsBackgroundPrerequisitesTasks1 Setup2 ros2 param list3 ros2 param get4 ros2 param set5 ros2 param dump6 ros2 param load7 Load parameter file on node startupSummaryNext stepsBackgroundA parameter is a configuration value of a node.
You can think of parameters as node settings.
A node can store parameters as integers, floats, booleans, strings, and lists.
In ROS 2, each node maintains its own parameters.
For more background on parameters, please seethe concept document.PrerequisitesThis tutorial uses theturtlesim package.As always, don’t forget to source ROS 2 inevery new terminal you open.Tasks1 SetupStart up the two turtlesim nodes,/turtlesimand/teleop_turtle.Open a new terminal and run:ros2 run turtlesim turtlesim_nodeOpen another terminal and run:ros2 run turtlesim turtle_teleop_key2 ros2 param listTo see the parameters belonging to your nodes, open a new terminal and enter the command:ros2 param listYou will see the node namespaces,/teleop_turtleand/turtlesim, followed by each node’s parameters:/teleop_turtle:qos_overrides./parameter_events.publisher.depthqos_overrides./parameter_events.publisher.durabilityqos_overrides./parameter_events.publisher.historyqos_overrides./parameter_events.publisher.reliabilityscale_angularscale_linearuse_sim_time/turtlesim:background_bbackground_gbackground_rqos_overrides./parameter_events.publisher.depthqos_overrides./parameter_events.publisher.durabilityqos_overrides./parameter_events.publisher.historyqos_overrides./parameter_events.publisher.reliabilityuse_sim_timeEvery node has the parameteruse_sim_time; it’s not unique to turtlesim.Based on their names, it looks like/turtlesim’s parameters determine the background color of the turtlesim window using RGB color values.To determine a parameter’s type, you can useros2paramget.3 ros2 param getTo display the type and current value of a parameter, use the command:ros2 param get <node_name> <parameter_name>Let’s find out the current value of/turtlesim’s parameterbackground_g:ros2 param get /turtlesim background_gWhich will return the value:Integer value is: 86Now you knowbackground_gholds an integer value.If you run the same command onbackground_randbackground_b, you will get the values69and255, respectively.4 ros2 param setTo change a parameter’s value at runtime, use the command:ros2 param set <node_name> <parameter_name> <value>Let’s change/turtlesim’s background color:ros2 param set /turtlesim background_r 150Your terminal should return the message:Set parameter successfulAnd the background of your turtlesim window should change colors:Setting parameters with thesetcommand will only change them in your current session, not permanently.
However, you can save your settings and reload them the next time you start a node.5 ros2 param dumpYou can view all of a node’s current parameter values by using the command:ros2 param dump <node_name>The command prints to the standard output (stdout) by default but you can also redirect the parameter values into a file to save them for later.
To save your current configuration of/turtlesim’s parameters into the fileturtlesim.yaml, enter the command:ros2 param dump /turtlesim > turtlesim.yamlYou will find a new file in the current working directory your shell is running in.
If you open this file, you’ll see the following content:/turtlesim:ros__parameters:background_b:255background_g:86background_r:150qos_overrides:/parameter_events:publisher:depth:1000durability:volatilehistory:keep_lastreliability:reliableuse_sim_time:falseDumping parameters comes in handy if you want to reload the node with the same parameters in the future.6 ros2 param loadYou can load parameters from a file to a currently running node using the command:ros2 param load <node_name> <parameter_file>To load theturtlesim.yamlfile generated withros2paramdumpinto/turtlesimnode’s parameters, enter the command:ros2 param load /turtlesim turtlesim.yamlYour terminal will return the message:Set parameter background_b successfulSet parameter background_g successfulSet parameter background_r successfulSet parameter qos_overrides./parameter_events.publisher.depth failed: parameter 'qos_overrides./parameter_events.publisher.depth' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.durability failed: parameter 'qos_overrides./parameter_events.publisher.durability' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.history failed: parameter 'qos_overrides./parameter_events.publisher.history' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.reliability failed: parameter 'qos_overrides./parameter_events.publisher.reliability' cannot be set because it is read-onlySet parameter use_sim_time successfulNoteRead-only parameters can only be modified at startup and not afterwards, that is why there are some warnings for the “qos_overrides” parameters.7 Load parameter file on node startupTo start the same node using your saved parameter values, use:ros2 run <package_name> <executable_name> --ros-args --params-file <file_name>This is the same command you always use to start turtlesim, with the added flags--ros-argsand--params-file, followed by the file you want to load.Stop your running turtlesim node, and try reloading it with your saved parameters, using:ros2 run turtlesim turtlesim_node --ros-args --params-file turtlesim.yamlThe turtlesim window should appear as usual, but with the purple background you set earlier.NoteWhen a parameter file is used at node startup, all parameters, including the read-only ones, will be updated.SummaryNodes have parameters to define their default configuration values.
You cangetandsetparameter values from the command line.
You can also save the parameter settings to a file to reload them in a future session.Next stepsJumping back to ROS 2 communication methods, in the next tutorial you’ll learn aboutactions.

Code Examples:

Language: unknown
ros2 run turtlesim turtlesim_node

Language: unknown
ros2 run turtlesim turtle_teleop_key

Language: unknown
ros2 param list

Language: unknown
/teleop_turtle:qos_overrides./parameter_events.publisher.depthqos_overrides./parameter_events.publisher.durabilityqos_overrides./parameter_events.publisher.historyqos_overrides./parameter_events.publisher.reliabilityscale_angularscale_linearuse_sim_time/turtlesim:background_bbackground_gbackground_rqos_overrides./parameter_events.publisher.depthqos_overrides./parameter_events.publisher.durabilityqos_overrides./parameter_events.publisher.historyqos_overrides./parameter_events.publisher.reliabilityuse_sim_time

Language: unknown
ros2 param get <node_name> <parameter_name>

Language: unknown
ros2 param get /turtlesim background_g

Language: unknown
Integer value is: 86

Language: unknown
ros2 param set <node_name> <parameter_name> <value>

Language: unknown
ros2 param set /turtlesim background_r 150

Language: unknown
Set parameter successful

Language: unknown
ros2 param dump <node_name>

Language: unknown
ros2 param dump /turtlesim > turtlesim.yaml

Language: unknown
/turtlesim:ros__parameters:background_b:255background_g:86background_r:150qos_overrides:/parameter_events:publisher:depth:1000durability:volatilehistory:keep_lastreliability:reliableuse_sim_time:false

Language: unknown
ros2 param load <node_name> <parameter_file>

Language: unknown
ros2 param load /turtlesim turtlesim.yaml

Language: unknown
Set parameter background_b successfulSet parameter background_g successfulSet parameter background_r successfulSet parameter qos_overrides./parameter_events.publisher.depth failed: parameter 'qos_overrides./parameter_events.publisher.depth' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.durability failed: parameter 'qos_overrides./parameter_events.publisher.durability' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.history failed: parameter 'qos_overrides./parameter_events.publisher.history' cannot be set because it is read-onlySet parameter qos_overrides./parameter_events.publisher.reliability failed: parameter 'qos_overrides./parameter_events.publisher.reliability' cannot be set because it is read-onlySet parameter use_sim_time successful

Language: unknown
ros2 run <package_name> <executable_name> --ros-args --params-file <file_name>

Language: unknown
ros2 run turtlesim turtlesim_node --ros-args --params-file turtlesim.yaml
